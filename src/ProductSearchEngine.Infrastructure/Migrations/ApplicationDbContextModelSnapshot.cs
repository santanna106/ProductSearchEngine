// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductSearchEngine.Infrastructure.Context;

#nullable disable

namespace ProductSearchEngine.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("ProductSearchEngine.Domain.Eitities.Category", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("tCategory", (string)null);
                });

            modelBuilder.Entity("ProductSearchEngine.Domain.Eitities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("ProductSearchEngine.Domain.Eitities.SearchProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SiteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SiteId");

                    b.ToTable("SearchProduct");
                });

            modelBuilder.Entity("ProductSearchEngine.Domain.Eitities.Site", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Site");
                });

            modelBuilder.Entity("ProductSite", b =>
                {
                    b.Property<int>("ProductsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SitesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProductsId", "SitesId");

                    b.HasIndex("SitesId");

                    b.ToTable("ProductSite");
                });

            modelBuilder.Entity("ProductSearchEngine.Domain.Eitities.Product", b =>
                {
                    b.HasOne("ProductSearchEngine.Domain.Eitities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ProductSearchEngine.Domain.Eitities.SearchProduct", b =>
                {
                    b.HasOne("ProductSearchEngine.Domain.Eitities.Product", "Product")
                        .WithMany("SearchProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductSearchEngine.Domain.Eitities.Site", "Site")
                        .WithMany("SearchProducts")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("ProductSite", b =>
                {
                    b.HasOne("ProductSearchEngine.Domain.Eitities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductSearchEngine.Domain.Eitities.Site", null)
                        .WithMany()
                        .HasForeignKey("SitesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductSearchEngine.Domain.Eitities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ProductSearchEngine.Domain.Eitities.Product", b =>
                {
                    b.Navigation("SearchProducts");
                });

            modelBuilder.Entity("ProductSearchEngine.Domain.Eitities.Site", b =>
                {
                    b.Navigation("SearchProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
